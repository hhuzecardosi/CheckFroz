// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Alias {
  id        Int @id @default(autoincrement())
  data      String
  comment   String?
  entity    Entity? @relation(fields: [entityId], references: [registreId])
  entityId  Int?
}


model Identification {
  id        Int @id @default(autoincrement())
  data      String
  comment   String?
  legal     Legal? @relation(fields: [legalId], references: [entityId])
  vessel    Vessel? @relation(fields: [vesselId], references: [entityId])
  legalId   Int?
  vesselId  Int?
}

model BirthDate {
  id        Int @id @default(autoincrement())
  day       Int
  month     Int
  year      Int
  comment   String
  natural   Natural? @relation(fields: [naturalId], references: [entityId], onDelete: Cascade)
  naturalId  Int?
}

model Address {
  id      Int @id @default(autoincrement())
  place   String
  country String

  natural Natural? @relation(fields: [naturalId], references: [entityId])
  naturalId Int?
  legal Legal? @relation(fields: [legalId], references: [entityId])
  legalId Int?
}

model BirthPlace {
  id      Int @id @default(autoincrement())
  place   String
  country String
  natural Natural? @relation(fields: [naturalId], references: [entityId])
  naturalId Int?
}

model IdentityDocument {
  id  Int @id @default(autoincrement())
  number String
  comment String
  isPassport Boolean

  natural Natural? @relation(fields: [naturalId], references: [entityId])
  naturalId Int?
}

model Natural {
  entity      Entity @relation(fields: [entityId], references: [registreId], onDelete: Cascade)
  entityId    Int @unique
  firstName   String?
  sex         Boolean?
  birthDate   BirthDate[]
  birthPlace  BirthPlace[]
  nationality String[]
  title       String?
  address     Address[]
  identityDocuments IdentityDocument[]
}

model Legal {
  entity  Entity @relation(fields: [entityId], references: [registreId])
  entityId Int @unique
  identification  Identification[]
  address Address[]
  phones String[]
  web String[]
  mail String[]
}

model Vessel {
  entity        Entity @relation(fields: [entityId], references: [registreId])
  entityId      Int @unique
  OMINumber     Int?
  idenfication  Identification[]

}

model Entity {
  registreId      Int @id @unique
  name            String
  nature          Nature
  alias           Alias[]
  EUReference     String?
  UNReference     String?
  juridicalBasis  String[]
  motifs          String?

  natural         Natural?
  legal           Legal?
  vessel          Vessel?
}

enum Nature {
  NATURAL
  LEGAL
  VESSEL
}

model PublicationDate {
  id  Int @unique @id @default(1)
  publicationDate DateTime
}